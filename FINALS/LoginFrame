import javax.swing.*;
import java.util.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.GridLayout;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import java.awt.Font;
import java.awt.FlowLayout;
import java.awt.Toolkit;

public class LoginFrame extends JFrame implements ActionListener {
    private JTextField usernameField;
    private JPasswordField passwordField;
    private JButton loginButton;
    private JButton registerButton;
    private List<User> registeredUsers;
    private User loggedInUser;
    private JLabel lblNewLabel;
    private JLabel lblNewLabel_1;
    
    
    
    public LoginFrame() {
        super("Login System");
        setIconImage(Toolkit.getDefaultToolkit().getImage("C:\\Users\\MEGATRON\\Documents\\Java Files\\New folder (3)\\100x100.png"));
        setAlwaysOnTop(true);
        
        setResizable(false);
        
        
        
        
        registeredUsers = new ArrayList<>();

        usernameField = new JTextField();
        usernameField.setBounds(113, 65, 171, 23);
        passwordField = new JPasswordField();
        passwordField.setBounds(113, 111, 171, 23);
        
        loginButton = new JButton("Login");
        loginButton.setFont(new Font("Tahoma", Font.BOLD, 12));
        loginButton.setBounds(42, 145, 87, 35);
        registerButton = new JButton("Sign-Up");
        registerButton.setFont(new Font("Tahoma", Font.BOLD, 12));
        registerButton.setBounds(159, 145, 114, 35);
        getContentPane().setLayout(null);

        JLabel label = new JLabel("Username:");
        label.setFont(new Font("Tahoma", Font.BOLD, 13));
        label.setBounds(32, 68, 90, 14);
        getContentPane().add(label);
        
        getContentPane().add(usernameField);
        
        
      
         
        JLabel label_1 = new JLabel("Password:");
        label_1.setFont(new Font("Tahoma", Font.BOLD, 13));
        label_1.setBounds(32, 114, 90, 14);
        getContentPane().add(label_1);
        getContentPane().add(passwordField);
        
        getContentPane().add(loginButton);
        getContentPane().add(registerButton);
        
        lblNewLabel = new JLabel("Welcome to Self Service");
        lblNewLabel.setFont(new Font("Tahoma", Font.BOLD, 13));
        lblNewLabel.setBounds(113, 22, 171, 26);
        getContentPane().add(lblNewLabel);
        
        lblNewLabel_1 = new JLabel("");
        lblNewLabel_1.setBounds(40, 11, 50, 50);
        ImageIcon img = new ImageIcon(this.getClass().getResource("403392748-221166691025354-292490.png"));
        lblNewLabel_1.setIcon(img);
        
        getContentPane().add(lblNewLabel_1);
        
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
           setSize(700, 400);
           
            pack();
            setBounds(500, 400, 330, 240);
         setLocationRelativeTo(null);
          setVisible(false);
         
        

        loginButton.addActionListener(this);
        registerButton.addActionListener(this);

        
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        String username = usernameField.getText();
        String password = new String(passwordField.getPassword());

        if (e.getSource() == loginButton) {
            if (loginUser(username, password)) {
                loggedInUser = getRegisteredUserByUsername(username);
                JOptionPane.showMessageDialog(this, "Login successful. Welcome, " + username + "!");
                openAddProductFrame();
                setLoginFrameVisibility(false);
            } else {
                JOptionPane.showMessageDialog(this, "Login failed. Incorrect username or password.", "Login Unsuccessful", JOptionPane.ERROR_MESSAGE);
            }
        } else if (e.getSource() == registerButton) {
            openRegisterFrame();
            setLoginFrameVisibility(false);
        }
    }
    
    public User getLoggedInUser() {
        return loggedInUser;
    }

    public void setLoginFrameVisibility(boolean visible) {
        setVisible(visible);
    }

    private void openAddProductFrame() {
        AddProductFrame addProductFrame = new AddProductFrame(getLoggedInUser());
        addProductFrame.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                List<Product> productList = addProductFrame.getProductList();
                for (Product product : productList) {
                    System.out.println(product.toString() + "---------------");
                }
                System.exit(0);
            }
        });
    }
    
    private User getRegisteredUserByUsername(String username) {
        for (User user : registeredUsers) {
            if (user.getUsername().equals(username)) {
                return user;
            }
        }
        return null; // Return null if the user is not found
    }

    private boolean loginUser(String username, String password) {
        for (User user : registeredUsers) {
            if (user.getUsername().equals(username) && user.getPassword().equals(password)) {
                return true;
            }
        }
        return false;
    }

    private void openRegisterFrame() {
        RegisterFrame registerFrame = new RegisterFrame(this);
        registerFrame.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                // Handle window closing event if needed
            }
        });
    }

    public void addRegisteredUser(User newUser) {
        registeredUsers.add(newUser);
    }
}

/* NAME: JAYRED DEIL N. MAHASOL
   SECTION: BSIT-2B
   ACTIVITY: QUEUE IMPLEMENTATION ARRAY
*/
import java.util.*;
public class arrayQueue {
    private int[] queueArray;
    private int rear;
    private int front;
    private int size;
    
    public arrayQueue(int size) {
        front = rear = 0;
        this.size = size;
        queueArray = new int[size];
    }
   
   // Method for enqueue or adding a value
   public void enqueue(int item) {
      if(size == rear) {
         System.out.println("[Queue is full]");
      } else {
         queueArray[rear] = item;
         rear++;
         System.out.println(" [" + item + "] " + " was added in the queue.");
   }
   
}
   // Method for dequeue or deleting a value
   public void dequeue(int item) {
      if(front == rear) {
         System.out.println("Queue is empty");
      }
      else {
         for(int i = 0; i < rear - 1; i++) {
         
            queueArray[i] = queueArray[i + 1];
            }
      if(rear < size) {
         queueArray[rear] = item;
      }
         System.out.println("The first front was removed in the queue.");
         rear--;
   }
   
}
   // Method for getting the front 
   public void front() {
      if(front == rear) {
         System.out.println("Queue is empty");
         }else{
         System.out.println("Front element: " + queueArray[front]);
        }
    }
    
   // Method for getting the rear
   public void rear() {
         if (front == rear) {
            System.out.println("Queue is empty");
        } else {
            System.out.println("Rear element: " + queueArray[rear - 1]);
        }
      
    
   }
   
   // Method for display
   public void print() {
        if(front == rear) {
            System.out.println("Queue is empty");
        } else {
            System.out.println("Queue elements:");
            for (int i = front; i < rear; i++) {
                System.out.print(" [" + queueArray[i] + "] ");
            }
            System.out.println();
        }
    }
}


// Class
class testQueue {
   public static void main(String[] args) {
      Scanner scanner = new Scanner(System.in);
      int size = 0;
      
      // the user cant proceed to the menu if he/she input 0 or less than 0
      if(size <= 0) {
      do{
         System.out.print("Enter a valid size (greater than 0): ");
         size = scanner.nextInt();
      }while (size <= 0);
} // end of if statement and do while loop 
        
        System.out.println("The size of the array:" + " [" + size + "] ");
        arrayQueue aq = new arrayQueue(size);
      int value = 0;
      
        while (true) {
            System.out.println("\nMenu:");
            System.out.println("1.) Enqueue");
            System.out.println("2.) Dequeue");
            System.out.println("3.) Front");
            System.out.println("4.) Rear");
            System.out.println("5.) Print");
            System.out.println("6.) Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

   switch (choice) {
      case 1:
         System.out.print("Enter value to push: ");
         scanner.nextLine();
         value = scanner.nextInt();
         aq.enqueue(value);
      break;
      case 2: 
         aq.dequeue(value);
      break;
      case 3:
         aq.front();
      break;
      case 4:
         aq.rear();
      break;
      case 5:
         aq.print();
      break;
      case 6:
         scanner.close();
         System.exit(0);
      default:
         System.out.println("Invalid choice. Please try again.");
      break;   
         }
      }
   }
}

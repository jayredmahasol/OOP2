/* NAME: JAYRED DEIL N. MAHASOL
   SECTION: BSIT-2B
   ACTIVITY: QUEUE IMPLEMENTATION LINKED LIST
*/

import java.util.*;
class Node{
    String data;
    Node next;
    Node prev;

   Node(String data) {
        this.data = data;
        this.next = null;
        this.prev = null;
    }
}

class QueueLinkedList {
    Node front, rear;

    public QueueLinkedList() {
        this.front = this.rear = null;
    }
   
   // Method for enqueue or adding a value
    public void enqueue(String data) {
        Node newNode = new Node(data);
        if (this.rear == null) {
            this.front = this.rear = newNode;
        } else {
            this.rear.next = newNode;
            newNode.prev = this.rear;
            this.rear = newNode;
        }
        System.out.println(data + " enqueued to queue.");
    }
   
   // Method for dequeue or deleting a value
    public void dequeue() {
        if (this.front == null) {
            System.out.println("Queue is empty.");
            return;
        }

        Node temp = this.front;
        this.front = this.front.next;

        if (this.front == null) {
            this.rear = null;
        } else {
            this.front.prev = null;
        }
        System.out.println(temp.data + " dequeued from queue.");
    }
   
   // Method for getting the front 
    public void front() {
        if (this.front == null) {
            System.out.println("Queue is empty.");
        } else {
            System.out.println("Front element is " + this.front.data);
        }
    }
   
   // Method for getting the rear
    public void rear() {
        if (this.rear == null) {
            System.out.println("Queue is empty.");
        } else {
            System.out.println("Rear element is " + this.rear.data);
        }
    }
   
   // Method for displaying the elements
    public void printQueue() {
        if (this.front == null) {
            System.out.println("Queue is empty.");
            return;
        }
        Node temp = this.front;
        System.out.println("Elements in the queue are: ");
        while (temp != null) {
            System.out.print(" ["+ temp.data + "] ");
            temp = temp.next;
        }
        System.out.println();
    }
}


public class linkListqueue {
    public static void main(String[] args) {
      Scanner scan = new Scanner(System.in);
      QueueLinkedList qll = new QueueLinkedList();
      int choice;

      while(true) {
         System.out.println("1. Enqueue");
         System.out.println("2. Dequeue");
         System.out.println("3. Front");
         System.out.println("4. Rear");
         System.out.println("5. Print");
         System.out.println("6. Exit");
         System.out.print("Enter your choice: ");
         choice = scan.nextInt();

      switch(choice){
      case 1:
         System.out.print("Enter the element to enqueue: ");
         scan.nextLine();
         String data = scan.nextLine();
         qll.enqueue(data);
      break;
      case 2:
         qll.dequeue();
         break;
      case 3:
         qll.front();
      break;
      case 4:
         qll.rear();
      break;
      case 5:
         qll.printQueue();
      break;
      case 6:
         scan.close();
         System.exit(0);
      default:
         System.out.println("Invalid choice. Please try again.");
      break;
         }
      }
   }
}
